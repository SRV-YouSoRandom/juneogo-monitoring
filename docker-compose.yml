services:
  prometheus-socotra:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: prometheus-socotra
    user: root
    restart: unless-stopped
    volumes:
      - ./prometheus/socotra:/app/prometheus/socotra
      - ./prometheus/common:/app/prometheus/common
      - ./prometheus/common/rules.yml:/app/prometheus/rules.yml
    env_file:
      - .env
    environment:
      - PROMETHEUS_CONFIG_DIR=/app/prometheus/socotra
      - PROMETHEUS_NAME=prometheus-socotra
    # networks:
    #   monitoring-network:
    #     ipv4_address: 192.168.11.4
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  prometheus-mainnet:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: prometheus-mainnet
    user: root
    restart: unless-stopped
    volumes:
      - ./prometheus/mainnet:/app/prometheus/mainnet
      - ./prometheus/common:/app/prometheus/common
      - ./prometheus/common/rules.yml:/app/prometheus/rules.yml
    env_file:
      - .env
    environment:
      - PROMETHEUS_CONFIG_DIR=/app/prometheus/mainnet
      - PROMETHEUS_NAME=prometheus-mainnet
    # networks:
    #   monitoring-network:
    #     ipv4_address: 192.168.11.5
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  # Loki for log aggregation
  loki:
    image: grafana/loki:3.0.0
    container_name: loki
    restart: unless-stopped
    volumes:
      - ./loki/config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    # networks:
    #   monitoring-network:
    #     ipv4_address: 192.168.11.8
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  # Promtail for log shipping
  promtail:
    image: grafana/promtail:3.0.0
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    # networks:
    #   monitoring-network:
    #     ipv4_address: 192.168.11.9
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  # monitoring-caddy:
  #   image: caddy:2.8.4
  #   container_name: monitoring-caddy
  #   restart: unless-stopped
  #   ports:
  #     - '80:80'
  #     - '443:443'
  #   volumes:
  #     - ./caddy/Caddyfile:/etc/caddy/Caddyfile
  #     - ./caddy/caddy_data:/data
  #     - ./caddy/caddy_config:/config
  #   env_file:
  #     - .env
  #   networks:
  #     monitoring-network:
  #       ipv4_address: 192.168.11.6
  #   logging:
  #     driver: 'json-file'
  #     options:
  #       max-size: '10m'
  #       max-file: '3'

  grafana:
    image: grafana/grafana:11.0.0
    container_name: grafana
    user: root
    restart: unless-stopped
    ports:
      - '3001:3001'
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/default.yaml
      - ./grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/contactPoints.yaml:/etc/grafana/provisioning/alerting/contactPoints.yaml
      - ./grafana/alertRules.yaml:/etc/grafana/provisioning/alerting/alertRules.yaml
    env_file:
      - .env
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    # networks:
    #   monitoring-network:
    #     ipv4_address: 192.168.11.7
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

# networks:
#   monitoring-network:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 192.168.11.0/24
#           gateway: 192.168.11.1

volumes:
  loki-data:
    driver: local